{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/character-list/character-list.component.css","./src/app/character-list/character-list.component.html","./src/app/character-list/character-list.component.ts","./src/app/character/character.component.css","./src/app/character/character.component.html","./src/app/character/character.component.ts","./src/app/http.factory.ts","./src/app/http.interceptor.ts","./src/app/star-wars.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<app-character-list></app-character-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Http, HttpModule, RequestOptions, XHRBackend } from '@angular/http';\n\nimport { httpFactory } from './http.factory';\nimport { AppComponent } from './app.component';\nimport { CharacterListComponent } from './character-list/character-list.component';\nimport { CharacterComponent } from './character/character.component';\nimport { StarWarsService } from './star-wars.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CharacterListComponent,\n    CharacterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule\n  ],\n  providers: [\n    StarWarsService,\n    {\n      provide: Http,\n      useFactory: httpFactory,\n      deps: [XHRBackend, RequestOptions]\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/character-list/character-list.component.css\n// module id = ./src/app/character-list/character-list.component.css\n// module chunks = main","module.exports = \"<div *ngFor=\\\"let c of characters\\\">\\n  <app-character [character]=\\\"c\\\"></app-character>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/character-list/character-list.component.html\n// module id = ./src/app/character-list/character-list.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { StarWarsService } from '../star-wars.service';\n\n@Component({\n  selector: 'app-character-list',\n  templateUrl: './character-list.component.html',\n  styleUrls: ['./character-list.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CharacterListComponent implements OnInit {\n\n  characters;\n\n  constructor(private _service: StarWarsService) { }\n\n  ngOnInit() {\n    this._service.getCharacters().subscribe(\n      characters => {this.characters = characters.results},\n      err =>  {},\n      () => { console.log('finally'); }\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/character-list/character-list.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/character/character.component.css\n// module id = ./src/app/character/character.component.css\n// module chunks = main","module.exports = \"<p>\\n  {{ character.name }}\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/character/character.component.html\n// module id = ./src/app/character/character.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-character',\n  templateUrl: './character.component.html',\n  styleUrls: ['./character.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CharacterComponent implements OnInit {\n\n  @Input() character;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/character/character.component.ts","import {XHRBackend, Http, RequestOptions} from '@angular/http'\nimport {InterceptedHttp} from './http.interceptor';\n\n\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n    return new InterceptedHttp(xhrBackend, requestOptions);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/http.factory.ts","import {Injectable} from '@angular/core';\nimport { ConnectionBackend, RequestOptions, Request, RequestOptionsArgs, Response, Http, Headers} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class InterceptedHttp extends Http {\n    constructor(backend: ConnectionBackend, defaultOptions: RequestOptions) {\n        super(backend, defaultOptions);\n    }\n\n    get(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        console.log('InterceptedHttp', url);\n      return super.get(url, this.getRequestOptionArgs(options));\n    }\n\n    post(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        return super.post(url, body, this.getRequestOptionArgs(options));\n    }\n\n    put(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\n        return super.put(url, body, this.getRequestOptionArgs(options));\n    }\n\n    delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\n        return super.delete(url, this.getRequestOptionArgs(options));\n    }\n\n    options(url: string, options?: RequestOptionsArgs): Observable<Response> {\n      console.log('options', options);\n      return super.options(url, options);\n    }\n\n    private getRequestOptionArgs(options?: RequestOptionsArgs): RequestOptionsArgs {\n        if (options == null) {\n            options = new RequestOptions();\n        }\n        if (options.headers == null) {\n            options.headers = new Headers();\n        }\n        options.headers.append('Content-Type', 'application/json');\n\n        return options;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/http.interceptor.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class StarWarsService {\n\n  constructor(private _http: Http) { }\n\n  getCharacters = (): Observable<any> => {\n    return this._http.get('https://swapi.co/api/people/')\n      .map( c => c.json() )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/star-wars.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}